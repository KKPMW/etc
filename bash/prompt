#!/usr/bin/env bash

function git_status() {
  # get branches
  local_branch="$(git symbolic-ref HEAD 2> /dev/null | sed -e 's/refs\/heads\///')"
  remote_branch="origin/$local_branch"

  # is the current branch dirty?
  if [[ -n "$(git status --porcelain 2> /dev/null)" ]]; then
    status_dirty=1
  fi

  # does remote branch exist and if so is it behind local branch?
  if git branch --remote 2> /dev/null | grep --quiet "$remote_branch"; then
    if [[ -n "$(git log "$remote_branch".."$local_branch" -1 2> /dev/null)" ]]; then
      status_ahead=1
    fi
  fi

  # is local behind remote branch?
  if [[ -n "$(git log "$local_branch".."$remote_branch" -1 2> /dev/null)" ]]; then
    status_behind=1
  fi

  # iterate through all the cases and if it matches, then echo
  if [[ -n "$status_dirty" && -n "$status_ahead"  && -n "$status_behind" ]]; then
    echo "⬢"
  elif [[ -n "$status_ahead" && -n "$status_behind" ]]; then
    echo "⬡"
  elif [[ -n "$status_dirty" && -n "$status_ahead" ]]; then
    echo "▲"
  elif [[ -n "$status_ahead" ]]; then
    echo "△"
  elif [[ -n "$status_dirty" && -n "$status_behind" ]]; then
    echo "▼"
  elif [[ -n "$status_behind" ]]; then
    echo "▽"
  elif [[ -n "$status_dirty" ]]; then
    echo "*"
  else
    echo ""
  fi
}

# check if we are on git directory
function is_on_git() {
  git rev-parse 2> /dev/null
}

# get git branch
git_info () {
  branch="$(git symbolic-ref HEAD 2> /dev/null | sed -e 's/refs\/heads\///')"
  if [[ "$branch" != "" ]]; then
    echo "$branch"
  else
    echo "(no branch)"
  fi
}

PS1="\
\$(is_on_git && \
  echo -n \"\[\033[38;5;8m\]\$(git_info)\" && \
  echo -n \"\[\033[38;5;1m\]\$(git_status) \")\
\[\033[1;38;5;0m\]:: \[\033[00m\]"

PS2="\
\$(is_on_git && \
  echo -n \"\[\033[38;5;8m\]\$(git_info)\" && \
  echo -n \"\[\033[38;5;1m\]\$(git_status) \")\
\[\033[1;38;5;0m\]++ \[\033[00m\]"
